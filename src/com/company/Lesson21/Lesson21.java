package com.company.Lesson21;

import com.company.Lesson12.Lesson12;

public class Lesson21 {
    public static void main(String[] args) {
        boolean a = true;
        System.out.println(a ? 5 : "sd"); //необязательно тернарник должен возвращать один тип
        //если при импорте .* импортируем классы с одним именем, то не сможем их использовать, если явно не укажем import z.A
        //можно обращаться не по короткому импорту, а полностью
        //чтобы импортировать класс, нужно указать его родительский package, не Java.*
        System.gc(); //советуете gc запуститься, он может проигнорировать
        //метод finalize -- перед удалением gc

        //если у конструктора modifier default, то класс с этим конструктором не сможет быть создан в другом пакете
        //дефолтный конструктор будет иметь такую же область видимости как и сам класс

        //Мы не можем рекурсивно вызывать конструктор (самого себя)

        //у конструктора не должно быть return type, иначе это будет метод с тем же именем

        //название переменной и метода могут совпадать

        //overloaded методы могут иметь и reference и примитивные параметры

        //если метод требует int, мы можем использовать char - в основе char лежит int

        //return; возвращает void

        //если int и double перегрузки, то java будет обращаться сначала к интам, потому что они "ближе"
    }

    Lesson21 Lesson21;
}
